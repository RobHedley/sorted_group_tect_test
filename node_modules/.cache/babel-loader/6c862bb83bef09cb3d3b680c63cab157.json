{"ast":null,"code":"var _jsxFileName = \"C:\\\\apps\\\\Sorted_tech_test\\\\src\\\\components\\\\Lister\\\\CreatePost\\\\index.js\";\nimport React, { useReducer } from 'react';\n\nconst CreatePost = ({\n  onCreate\n}) => {\n  const initialState = {\n    title: '',\n    body: '',\n    author: ''\n  };\n\n  const postReducer = (state, {\n    type,\n    ...payload\n  }) => {\n    // TODO: implement action handlers\n    console.log(type);\n    console.log(payload);\n\n    if (type == 'update') {\n      // do stuff\n      console.log(payload);\n      return payload;\n    }\n  };\n\n  const [{\n    title,\n    body,\n    author\n  }, dispatch] = useReducer(postReducer, initialState);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    \"aria-label\": \"Create post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \"Add new post\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    value: title,\n    onChange: ({\n      target: {\n        value\n      }\n    }) => dispatch({\n      type: 'update',\n      key: 'title',\n      title\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Body\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"body\",\n    value: body,\n    onChange: ({\n      target: {\n        value\n      }\n    }) => dispatch({\n      type: 'update',\n      key: 'body',\n      value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Author\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"author\",\n    value: author,\n    onChange: ({\n      target: {\n        value\n      }\n    }) => dispatch({\n      type: 'update',\n      key: 'author',\n      value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      onCreate({\n        title,\n        body,\n        author\n      });\n      dispatch({\n        type: 'reset'\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, \"Add post\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => dispatch({\n      type: 'reset'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, \"Reset\")));\n};\n\nexport default CreatePost;","map":{"version":3,"sources":["C:/apps/Sorted_tech_test/src/components/Lister/CreatePost/index.js"],"names":["React","useReducer","CreatePost","onCreate","initialState","title","body","author","postReducer","state","type","payload","console","log","dispatch","target","value","key"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\n\nconst CreatePost = ({ onCreate }) => {\n\tconst initialState = {\n\t\ttitle: '',\n\t\tbody: '',\n\t\tauthor: ''\n\t};\n\n\tconst postReducer = (state, { type, ...payload } ) => {\n\t\t// TODO: implement action handlers\n\n\t\tconsole.log(type)\n\t\tconsole.log(payload)\n\t\tif(type == 'update') {\n\t\t\t// do stuff\n\t\t\tconsole.log(payload)\n\t\t\treturn payload\n\t\t  }\n\t};\n\n\tconst [{title, body, author}, dispatch] = useReducer(postReducer, initialState)\n\n\treturn (\n\t\t<form aria-label=\"Create post\">\n\t\t\t<fieldset>\n\t\t\t\t<h3>Add new post</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<label htmlFor=\"title\">Title</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"title\" value={title} onChange={({ target: { value } }) => dispatch({ type: 'update', key: 'title', title })}/>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<label htmlFor=\"body\">Body</label>\n\t\t\t\t\t\t<textarea id=\"body\" value={body} onChange={({ target: { value } }) => dispatch({type: 'update', key: 'body', value})}></textarea>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<label htmlFor=\"author\">Author</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"author\" value={author} onChange={({ target: { value } }) => dispatch({ type: 'update', key: 'author', value })}/>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\n\t\t\t\t<button type=\"button\" onClick={() => {\n\t\t\t\t\tonCreate({ title, body, author });\n\t\t\t\t\tdispatch({ type: 'reset'})\n\t\t\t\t}}>Add post</button>\n\t\t\t\t<button type=\"button\" onClick={() => dispatch({ type: 'reset'})}>Reset</button>\n\t\t\t</fieldset>\n\t\t</form>\n\t);\n};\n\nexport default CreatePost;"]},"metadata":{},"sourceType":"module"}