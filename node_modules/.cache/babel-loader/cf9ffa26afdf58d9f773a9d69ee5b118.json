{"ast":null,"code":"var _jsxFileName = \"C:\\\\apps\\\\Sorted_tech_test\\\\src\\\\components\\\\Lister\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport getPosts from '../../services/posts';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\n\nconst Lister = () => {\n  const [loading, setLoading] = useState(true);\n  const [allPosts, setPosts] = useState([]);\n  const [postList, setPostList] = useState();\n  useEffect(() => {\n    getPosts().then(data => {\n      setLoading(false);\n      setPosts(data);\n    });\n  }, []);\n\n  const onDeletePost = id => {\n    // TODO: implement\n    console.log('the id is ', id);\n    console.log('I am in here');\n    const postArray = allPosts;\n    const toDelete = postArray.find(function (obj) {\n      return obj.id === id;\n    });\n    console.log('delete', toDelete);\n  };\n\n  const onCreatePost = post => {// TODO: implement\n  };\n\n  useEffect(() => {\n    const postList = allPosts.map((post, i) => {\n      console.log(post.title);\n      return /*#__PURE__*/React.createElement(Post, {\n        id: post.id,\n        title: post.title,\n        body: post.body,\n        author: post.author,\n        onDelete: onDeletePost,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }\n      });\n    });\n    setPostList(postList);\n  }, [allPosts]);\n  console.log('allPosts', allPosts);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, \"Loading...\"), postList && postList, /*#__PURE__*/React.createElement(CreatePost, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default Lister;","map":{"version":3,"sources":["C:/apps/Sorted_tech_test/src/components/Lister/index.js"],"names":["React","useEffect","useState","getPosts","Post","CreatePost","Lister","loading","setLoading","allPosts","setPosts","postList","setPostList","then","data","onDeletePost","id","console","log","postArray","toDelete","find","obj","onCreatePost","post","map","i","title","body","author"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,QAAD,EAAWC,QAAX,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,EAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfE,IAAAA,QAAQ,GAAGU,IAAX,CAAgBC,IAAI,IAAI;AACvBN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACA,KAHD;AAIA,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,EAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,UAAMC,SAAS,GAAGV,QAAlB;AACA,UAAMW,QAAQ,GAAGD,SAAS,CAACE,IAAV,CAAe,UAAUC,GAAV,EAAgB;AAAE,aAAOA,GAAG,CAACN,EAAJ,KAAWA,EAAlB;AAAuB,KAAxD,CAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,QAAtB;AACA,GAPD;;AASA,QAAMG,YAAY,GAAGC,IAAI,IAAI,CAC5B;AACA,GAFD;;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMU,QAAQ,GAAGF,QAAQ,CAACgB,GAAT,CAAa,CAACD,IAAD,EAAOE,CAAP,KAAa;AAC1CT,MAAAA,OAAO,CAACC,GAAR,CAAYM,IAAI,CAACG,KAAjB;AACA,0BACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAEH,IAAI,CAACR,EAAf;AAAmB,QAAA,KAAK,EAAEQ,IAAI,CAACG,KAA/B;AAAsC,QAAA,IAAI,EAAEH,IAAI,CAACI,IAAjD;AAAuD,QAAA,MAAM,EAAEJ,IAAI,CAACK,MAApE;AAA4E,QAAA,QAAQ,EAAEd,YAAtF;AAAoG,QAAA,GAAG,EAAEW,CAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGE,KALc,CAAjB;AAMEd,IAAAA,WAAW,CAACD,QAAD,CAAX;AACF,GARQ,EAQP,CAACF,QAAD,CARO,CAAT;AAUAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBT,QAAxB;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,OAAO,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAMEI,QAAQ,IAAIA,QANd,eAOC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CADD;AAWA,CAjDD;;AAmDA,eAAeL,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport getPosts from '../../services/posts';\nimport Post from './Post'\nimport CreatePost from './CreatePost';\n\nconst Lister = () => {\n\n\tconst [loading, setLoading] = useState(true);\n\tconst [allPosts, setPosts] = useState([]);\n\tconst [postList, setPostList] = useState();\n\n\tuseEffect(() => {\n\t\tgetPosts().then(data => {\n\t\t\tsetLoading(false);\n\t\t\tsetPosts(data);\n\t\t});\n\t}, []);\n\n\tconst onDeletePost = (id) => {\n\t\t// TODO: implement\n\t\tconsole.log('the id is ', id)\n\t\tconsole.log('I am in here')\n\t\tconst postArray = allPosts\n\t\tconst toDelete = postArray.find(function( obj ) { return obj.id === id; })\n\t\tconsole.log('delete', toDelete)\n\t}\n\n\tconst onCreatePost = post => {\n\t\t// TODO: implement\n\t}\n\n\tuseEffect(() => {\n\t\tconst postList = allPosts.map((post, i) => {\n\t\t\tconsole.log(post.title)\n\t\t\treturn (\n\t\t\t  <Post id={post.id} title={post.title} body={post.body} author={post.author} onDelete={onDeletePost} key={i}/>\n\t\t\t);\n\t\t  });\n\t\t  setPostList(postList)\n\t},[allPosts])\n\n\tconsole.log('allPosts', allPosts)\n\n\treturn (\n\t\t<div className=\"postList\">\n\t\t\t{loading &&\n\t\t\t\t<h2>\n\t\t\t\t\tLoading...\n\t\t\t\t</h2>\n\t\t\t}\n\t\t\t{postList && postList}\n\t\t\t<CreatePost />\n\t\t</div>\n\t)\n};\n\nexport default Lister;"]},"metadata":{},"sourceType":"module"}