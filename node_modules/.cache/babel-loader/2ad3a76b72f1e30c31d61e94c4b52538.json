{"ast":null,"code":"var _jsxFileName = \"C:\\\\apps\\\\Sorted_tech_test\\\\src\\\\components\\\\Lister\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport getPosts from '../../services/posts';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\n\nconst Lister = () => {\n  const [loading, setLoading] = useState(true);\n  const [allPosts, setPosts] = useState([]);\n  useEffect(() => {\n    getPosts().then(data => {\n      setLoading(false);\n      setPosts(data);\n    });\n  }, []);\n  useEffect(() => {\n    const showPposts = showOverlays.map((overlay, i) => {\n      return /*#__PURE__*/React.createElement(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://web.flowminder.org/\\\">Flowminder</a>\",\n        url: overlay.url,\n        opacity: overlay.opacity,\n        key: i,\n        zIndex: 30,\n        tms: \"false\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 6\n        }\n      });\n    });\n  }, [allposts]);\n  console.log('allPosts', allPosts); //return <div>TODO - wire up lister component</div>\n\n  const onDeletePost = id => {// TODO: implement\n  };\n\n  const onCreatePost = post => {// TODO: implement\n  }; // TODO: implement render method, using Post and CreatePost e.g.\n  //\t\t\t\t...\n  // \t\t\t\t<div className=\"postList\">\n  //\t\t\t\t\t...\n  //\t\t\t\t\t<CreatePost />\n  // \t\t\t\t</div>\n  //\t\t\t\t...\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"postList\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(CreatePost, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default Lister;","map":{"version":3,"sources":["C:/apps/Sorted_tech_test/src/components/Lister/index.js"],"names":["React","useEffect","useState","getPosts","Post","CreatePost","Lister","loading","setLoading","allPosts","setPosts","then","data","showPposts","showOverlays","map","overlay","i","url","opacity","allposts","console","log","onDeletePost","id","onCreatePost","post"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,QAAD,EAAWC,QAAX,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfE,IAAAA,QAAQ,GAAGQ,IAAX,CAAgBC,IAAI,IAAI;AACvBJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACA,KAHD;AAIA,GALQ,EAKN,EALM,CAAT;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMY,UAAU,GAAGC,YAAY,CAACC,GAAb,CAAiB,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACnD,0BACE,oBAAC,SAAD;AACD,QAAA,WAAW,EAAC,6DADX;AAED,QAAA,GAAG,EAAED,OAAO,CAACE,GAFZ;AAGD,QAAA,OAAO,EAAEF,OAAO,CAACG,OAHhB;AAID,QAAA,GAAG,EAAEF,CAJJ;AAKD,QAAA,MAAM,EAAE,EALP;AAMD,QAAA,GAAG,EAAC,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUE,KAXgB,CAAnB;AAYA,GAbQ,EAaP,CAACG,QAAD,CAbO,CAAT;AAeAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBb,QAAxB,EA3BoB,CA6BpB;;AAEA,QAAMc,YAAY,GAAIC,EAAD,IAAQ,CAC5B;AACA,GAFD;;AAIA,QAAMC,YAAY,GAAGC,IAAI,IAAI,CAC5B;AACA,GAFD,CAnCoB,CAuCpB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD;AAMA,CArDD;;AAuDA,eAAepB,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport getPosts from '../../services/posts';\nimport Post from './Post'\nimport CreatePost from './CreatePost';\n\nconst Lister = () => {\n\n\tconst [loading, setLoading] = useState(true);\n\tconst [allPosts, setPosts] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetPosts().then(data => {\n\t\t\tsetLoading(false);\n\t\t\tsetPosts(data);\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst showPposts = showOverlays.map((overlay, i) => {\n\t\t\treturn (\n\t\t\t  <TileLayer\n\t\t\t\tattribution='&copy; <a href=\"https://web.flowminder.org/\">Flowminder</a>'\n\t\t\t\turl={overlay.url}\n\t\t\t\topacity={overlay.opacity}\n\t\t\t\tkey={i}\n\t\t\t\tzIndex={30}\n\t\t\t\ttms=\"false\"\n\t\t\t  />\n\t\t\t);\n\t\t  });\n\t},[allposts])\n\n\tconsole.log('allPosts', allPosts)\n\n\t//return <div>TODO - wire up lister component</div>\n\n\tconst onDeletePost = (id) => {\n\t\t// TODO: implement\n\t}\n\n\tconst onCreatePost = post => {\n\t\t// TODO: implement\n\t}\n\n\t// TODO: implement render method, using Post and CreatePost e.g.\n\t//\t\t\t\t...\n\t// \t\t\t\t<div className=\"postList\">\n\t//\t\t\t\t\t...\n\t//\t\t\t\t\t<CreatePost />\n\t// \t\t\t\t</div>\n\t//\t\t\t\t...\n\n\treturn (\n\t\t<div className=\"postList\">\n\t\t\t<postList />\n\t\t\t<CreatePost />\n\t\t</div>\n\t)\n};\n\nexport default Lister;"]},"metadata":{},"sourceType":"module"}