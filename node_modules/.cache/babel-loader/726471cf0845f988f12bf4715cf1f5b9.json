{"ast":null,"code":"var _jsxFileName = \"C:\\\\apps\\\\Sorted_tech_test\\\\src\\\\components\\\\Lister\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport getPosts from '../../services/posts';\nimport Post from './Post';\nimport CreatePost from './CreatePost';\n\nconst Lister = () => {\n  const [loading, setLoading] = useState(true);\n  const [allPosts, setPosts] = useState([]);\n  const [postList, setPostList] = useState();\n  useEffect(() => {\n    getPosts().then(data => {\n      setLoading(false);\n      setPosts(data);\n    });\n  }, []);\n\n  const onDeletePost = id => {\n    const toDelete = allPosts.indexOf(allPosts.find(function (obj) {\n      return obj.id === id;\n    }));\n    let deleteArray = allPosts;\n\n    if (toDelete !== -1) {\n      deleteArray.splice(toDelete, 1);\n    }\n\n    setPosts([...deleteArray]);\n  };\n\n  const onCreatePost = post => {\n    let addArray = allPosts;\n    addArray.push(post);\n    setPosts([...addArray]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \"Loading...\"), postList && postList, /*#__PURE__*/React.createElement(CreatePost, {\n    onCreate: onCreatePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default Lister;","map":{"version":3,"sources":["C:/apps/Sorted_tech_test/src/components/Lister/index.js"],"names":["React","useEffect","useState","getPosts","Post","CreatePost","Lister","loading","setLoading","allPosts","setPosts","postList","setPostList","then","data","onDeletePost","id","toDelete","indexOf","find","obj","deleteArray","splice","onCreatePost","post","addArray","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,QAAD,EAAWC,QAAX,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,EAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfE,IAAAA,QAAQ,GAAGU,IAAX,CAAgBC,IAAI,IAAI;AACvBN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACA,KAHD;AAIA,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC5B,UAAMC,QAAQ,GAAGR,QAAQ,CAACS,OAAT,CAAiBT,QAAQ,CAACU,IAAT,CAAc,UAAUC,GAAV,EAAgB;AAAE,aAAOA,GAAG,CAACJ,EAAJ,KAAWA,EAAlB;AAAuB,KAAvD,CAAjB,CAAjB;AACA,QAAIK,WAAW,GAAGZ,QAAlB;;AACA,QAAGQ,QAAQ,KAAK,CAAC,CAAjB,EAAmB;AAClBI,MAAAA,WAAW,CAACC,MAAZ,CAAmBL,QAAnB,EAA6B,CAA7B;AACA;;AACDP,IAAAA,QAAQ,CAAC,CAAC,GAAGW,WAAJ,CAAD,CAAR;AACA,GAPD;;AASA,QAAME,YAAY,GAAGC,IAAI,IAAI;AAC5B,QAAIC,QAAQ,GAAGhB,QAAf;AACAgB,IAAAA,QAAQ,CAACC,IAAT,CAAcF,IAAd;AACAd,IAAAA,QAAQ,CAAC,CAAC,GAAGe,QAAJ,CAAD,CAAR;AACA,GAJD;;AAMA,sBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACElB,OAAO,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAMEI,QAAQ,IAAIA,QANd,eAOC,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEY,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CADD;AAWA,CAvCD;;AAyCA,eAAejB,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport getPosts from '../../services/posts';\nimport Post from './Post'\nimport CreatePost from './CreatePost';\n\nconst Lister = () => {\n\n\tconst [loading, setLoading] = useState(true);\n\tconst [allPosts, setPosts] = useState([]);\n\tconst [postList, setPostList] = useState();\n\n\tuseEffect(() => {\n\t\tgetPosts().then(data => {\n\t\t\tsetLoading(false);\n\t\t\tsetPosts(data);\n\t\t});\n\t}, []);\n\n\tconst onDeletePost = (id) => {\n\t\tconst toDelete = allPosts.indexOf(allPosts.find(function( obj ) { return obj.id === id; }))\n\t\tlet deleteArray = allPosts\n\t\tif(toDelete !== -1){\n\t\t\tdeleteArray.splice(toDelete, 1);\n\t\t}\n\t\tsetPosts([...deleteArray])\n\t}\n\n\tconst onCreatePost = post => {\n\t\tlet addArray = allPosts\n\t\taddArray.push(post)\n\t\tsetPosts([...addArray])\n\t}\n\n\treturn (\n\t\t<div className=\"postList\">\n\t\t\t{loading &&\n\t\t\t\t<h2>\n\t\t\t\t\tLoading...\n\t\t\t\t</h2>\n\t\t\t}\n\t\t\t{postList && postList}\n\t\t\t<CreatePost onCreate={onCreatePost} />\n\t\t</div>\n\t)\n};\n\nexport default Lister;"]},"metadata":{},"sourceType":"module"}